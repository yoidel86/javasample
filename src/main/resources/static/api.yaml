openapi: "3.0.0"
info:
  title: Drone API
  description: 'The Drone REST API . Please see http://127.0.0.1:8080/docs/api for more details.'
  version: v1
  contact:
    name: Demo API Support
    url: 'http://github.com/yoidel86/demoApplication'
    email: yoidel86@gmail.com
servers:
  - url: 'http://127.0.0.1:8080/v1'
    description: localhost API server
paths:
  /drones:
    get:
      summary: List all drones
      operationId: listDrones
      parameters:
        - name: status #checking available drones for loading;
          in: query
          schema:
            type: string
            description: status
      tags:
        - drones
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drones'
    post: #- registering a drone;
      summary: Create a drone
      operationId: createDrone
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drone'
  /drones/{droneId}:
    get: #- checking loaded medication items for a given drone;
      summary: Info for a specific drone
      operationId: showDroneById
      parameters:
        - name: droneId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            description: droneId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drone'
  /drones/{droneId}/medications:
    get: #- get loaded medications;
      summary: checking loaded medication items for a given drone;
      operationId: getDroneLoadedMedicationsById
      parameters:
        - name: droneId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            description: droneId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medications'
  /drones/{droneId}/batery-level:
    get: #- check drone battery level for a given drone;
      summary: check drone battery level for a given drone;
      operationId: getDroneBateryLevelById
      parameters:
        - name: droneId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            description: droneId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medications'
  /medications:
    get:
      summary: List all medications
      operationId: listMedications
      tags:
        - medications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medications'
    post:
      summary: Create a Medication
      operationId: createMedication
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medication'
  /medications/{medicationId}:
    get:
      summary: Info for a specific Medication
      operationId: showMedicationById
      parameters:
        - name: medicationId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            description: medicationId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drone'
  /loads:
    get:
      summary: List all Loads
      operationId: listLoads
      tags:
        - loads
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loads'

    post: #loading a drone with medication items;
      summary: Create a Load
      operationId: createLoad
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Load'
components:
  schemas:
    Model:
      type: string
      enum:
        - Lightweight
        - Middleweight
        - Cruiserweight
        - Heavyweight
    State:
      type: string
      enum:
        - IDLE
        - LOADING
        - LOADED
        - DELIVERING
        - DELIVERED
        - RETURNING
    Drone:
      type: object
      required:
        - id
        - serialNumber

      properties:
        id:
          type: integer
        serialNumber:
          type: string
        model:
          type: string

        weightLimit:
          type: integer
        batteryCapacity:
          type: integer
        state:
          type: string
    Drones:
      type: array
      items:
        $ref: '#/components/schemas/Drone'
    Medication:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        code:
          type: string
        weight:
          type: integer
        image:
          type: string
    Medications:
      type: array
      items:
        $ref: '#/components/schemas/Medication'
    Load:
      type: object
      properties:
        id:
          type: integer
        drone_id:
          type: integer
        medications_id:
          type: array
          items:
            type: integer
    Loads:
      type: array
      items:
        $ref: '#/components/schemas/Load'

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
